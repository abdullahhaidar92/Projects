#pragma checksum "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c0e4c9e9d3e930f4b6d7210839bca51e41ad2a8e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Map_TrackVehicle), @"mvc.1.0.view", @"/Views/Map/TrackVehicle.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Map/TrackVehicle.cshtml", typeof(AspNetCore.Views_Map_TrackVehicle))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\_ViewImports.cshtml"
using FleetManagementWebApplication;

#line default
#line hidden
#line 2 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\_ViewImports.cshtml"
using FleetManagementWebApplication.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0e4c9e9d3e930f4b6d7210839bca51e41ad2a8e", @"/Views/Map/TrackVehicle.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"169b9f654bcf8c04b3a14822abda27d1205ec27e", @"/Views/_ViewImports.cshtml")]
    public class Views_Map_TrackVehicle : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("selectedVehicle"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "Id", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("border:none;padding:5px 10px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onchange", new global::Microsoft.AspNetCore.Html.HtmlString("this.form.submit()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Map", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "TrackVehicle", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
  
    ViewData["Title"] = "Track Vehicle";
    Layout = "LayoutManager";
    List<SelectListItem> vehicles=(List<SelectListItem>)ViewData["vehicles"];
Vehicle vehicle=(Vehicle)ViewData["vehicle"];


#line default
#line hidden
            BeginContext(208, 1411, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0e4c9e9d3e930f4b6d7210839bca51e41ad2a8e6086", async() => {
                BeginContext(214, 1398, true);
                WriteLiteral(@"
    <meta name=""viewport"" content=""initial-scale=1.0, width=device-width"" />
    <link rel=""stylesheet"" type=""text/css"" href=""https://js.api.here.com/v3/3.0/mapsjs-ui.css?dp-version=1549984893"" />
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-core.js""></script>
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-service.js""></script>
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-ui.js""></script>
    <script type=""text/javascript"" src=""https://js.api.here.com/v3/3.0/mapsjs-mapevents.js""></script>
    <style>
        .map-container {
            width: 100%;
            height: 100%;
            position: relative;
        }

        #navi {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
        }

        #info {
            z-index: 10;
            background-color: rgba(0,0,0,0.4);
            width: 220px;
          ");
                WriteLiteral(@"  
            position: absolute;
            top: 20px;
            left: 15px;
            color: white;
            padding: 10px 10px;
        }
        .stat-yellow {
            color:rgb(255,255,0);
        }
       .stat-red {
            color:rgb(255,0,0);
        }
       .stat-blue {
            color:rgb(0,0,255);
        }
    </style>


");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1619, 544, true);
            WriteLiteral(@"


<div class=""fleet-container map-container"">

    <div id=""navi"" style=""background-color:grey"">
        <div id=""map"" style=""width: 100%; height: 700px; background: grey"" />
        <!--Testing
            <button onclick=""showSum()"">Show</button>
            <div  class=""wordwrap"" id=""sum""></div>
        </div>
    -->
        <div id=""info"">
            <center><h4 id=""time"" style=""color:yellow;border:1px solid white;padding:2px 5px;""> -- : -- :  --   -- </h4></center>
            <h5>Select Vehicle : </h5>
            ");
            EndContext();
            BeginContext(2163, 231, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0e4c9e9d3e930f4b6d7210839bca51e41ad2a8e9294", async() => {
                BeginContext(2217, 18, true);
                WriteLiteral("\r\n                ");
                EndContext();
                BeginContext(2235, 138, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0e4c9e9d3e930f4b6d7210839bca51e41ad2a8e9695", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Name = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
#line 69 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = vehicles;

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2373, 14, true);
                WriteLiteral("\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2394, 67, true);
            WriteLiteral("\r\n          \r\n\r\n            <hr />\r\n            <div id=\"status\">\r\n");
            EndContext();
#line 75 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                 if (vehicle.isCurrentlyActive)
                {
                    if (vehicle.isOnTheRoad)
                    {

#line default
#line hidden
            BeginContext(2598, 120, true);
            WriteLiteral("                        <h5 class=\"stat-blue\">\r\n                            On The Road\r\n                        </h5>\r\n");
            EndContext();
#line 82 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                    }
                    else
                    {

#line default
#line hidden
            BeginContext(2790, 117, true);
            WriteLiteral("                        <h5 class=\"stat-yellow\">\r\n                            Active\r\n                        </h5>\r\n");
            EndContext();
#line 88 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                    }

                }
                else
                {

#line default
#line hidden
            BeginContext(2990, 85, true);
            WriteLiteral(" <h5 class=\"stat-red\">\r\n                        Inactive\r\n                    </h5>\r\n");
            EndContext();
#line 95 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                }

#line default
#line hidden
            BeginContext(3094, 38, true);
            WriteLiteral("            </div>\r\n            <hr>\r\n");
            EndContext();
#line 98 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
             if (vehicle.CurrentDriver != null)
            {

#line default
#line hidden
            BeginContext(3196, 105, true);
            WriteLiteral("                <h5>Current Driver : </h5>\r\n                <h5 id=\"driver\" style=\"color:rgb(255,255,0)\">");
            EndContext();
            BeginContext(3302, 26, false);
#line 101 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                        Write(vehicle.CurrentDriver.Name);

#line default
#line hidden
            EndContext();
            BeginContext(3328, 8, true);
            WriteLiteral(" </h5>\r\n");
            EndContext();
#line 102 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
            }
            else
            {

#line default
#line hidden
            BeginContext(3384, 114, true);
            WriteLiteral("                <h5>Driver : </h5>\r\n                <h5 id=\"driver\" style=\"color:rgb(255,255,0)\">No Driver </h5>\r\n");
            EndContext();
#line 107 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
            }

#line default
#line hidden
            BeginContext(3513, 110, true);
            WriteLiteral("            <hr />\r\n            <h5>Fuel Level :</h5>\r\n            <h5 id=\"fuel\" style=\"color:rgb(255,255,0)\">");
            EndContext();
            BeginContext(3624, 17, false);
#line 110 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                  Write(vehicle.FuelLevel);

#line default
#line hidden
            EndContext();
            BeginContext(3641, 121, true);
            WriteLiteral(" Litres</h5>\r\n            <hr />\r\n            <h5>Odometer :</h5>\r\n            <h5 id=\"odo\" style=\"color:rgb(255,255,0)\">");
            EndContext();
            BeginContext(3763, 16, false);
#line 113 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                 Write(vehicle.Odometer);

#line default
#line hidden
            EndContext();
            BeginContext(3779, 122, true);
            WriteLiteral(" Km</h5>\r\n            <hr />\r\n            <h5>Current Load :</h5>\r\n            <h5 id=\"load\" style=\"color:rgb(255,255,0)\">");
            EndContext();
            BeginContext(3902, 19, false);
#line 116 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                  Write(vehicle.CurrentLoad);

#line default
#line hidden
            EndContext();
            BeginContext(3921, 2, true);
            WriteLiteral("  ");
            EndContext();
            BeginContext(3924, 21, false);
#line 116 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                                        Write(ViewData["OrderType"]);

#line default
#line hidden
            EndContext();
            BeginContext(3945, 500, true);
            WriteLiteral(@"</h5>
            <hr />
            <h5>Refresh Rate :</h5>
            <input type=""number"" id=""refresh"" style=""border:none;border-radius:4px;text-align:center"" value=""1000""
                   onchange=""ChangeRate(this)"" placeholder=""rate in seconds"" />
        </div>
    </div>

<script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js""></script>
<script type=""text/javascript"">
      var myVar = setInterval(infoTimer,500);
    var vehicle =");
            EndContext();
            BeginContext(4446, 10, false);
#line 127 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
            Write(vehicle.Id);

#line default
#line hidden
            EndContext();
            BeginContext(4456, 38, true);
            WriteLiteral(";\r\n    var rate = 500;\r\n    var lat = ");
            EndContext();
            BeginContext(4495, 16, false);
#line 129 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
         Write(vehicle.Latitude);

#line default
#line hidden
            EndContext();
            BeginContext(4511, 17, true);
            WriteLiteral(";\r\n    var log = ");
            EndContext();
            BeginContext(4529, 18, false);
#line 130 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
         Write(vehicle.Longtitude);

#line default
#line hidden
            EndContext();
            BeginContext(4547, 3520, true);
            WriteLiteral(@";
    var marker; 
    
    var route = []; 
    var route2 = [33.99069084, 35.64277842, 33.99068529, 35.64277842, 33.99067861, 35.64277573, 33.99066972, 35.64277305, 33.99066527, 35.64276903, 33.99066416, 35.64276903, 33.99066193, 35.64276903, 33.99065971, 35.64276769, 33.99065749, 35.64276769, 33.99065526, 35.64276635, 33.99064970, 35.64276366, 33.99064303, 35.64276098, 33.99063414, 35.64275428, 33.99062858, 35.64275025, 33.99062302, 35.64274757, 33.99061746, 35.64274489, 33.99061301, 35.64274221, 33.99060522, 35.64273818, 33.99060189, 35.64273818, 33.99059411, 35.64273550, 33.99058855, 35.64273282, 33.99058299, 35.64272880, 33.99057743, 35.64272477, 33.99057520, 35.64272343, 33.99057187, 35.64272075, 33.99056742, 35.64271673, 33.99056186, 35.64271136, 33.99054740, 35.64270868, 33.99053962, 35.64270734, 33.99053072, 35.64270331, 33.99051405, 35.64269661, 33.99050960, 35.64269393, 33.99050070, 35.64268454, 33.99049181, 35.64268186, 33.99048180, 35.64267917, 33.99046957, 35.64267247, 33.99046623, 35.64266");
            WriteLiteral(@"845, 33.99046401, 35.64266711, 33.99045845, 35.64266174, 33.99044844, 35.64264967, 33.99043510, 35.64264833, 33.99042842, 35.64264431, 33.99041286, 35.64263760, 33.99039840, 35.64263224, 33.99038061, 35.64262151, 33.99036282, 35.64261212, 33.99034948, 35.64260541, 33.99033391, 35.64260005, 33.99032057, 35.64259334, 33.99030833, 35.64258932, 33.99029054, 35.64257457, 33.99028054, 35.64257055, 33.99026942, 35.64256384, 33.99026608, 35.64256250, 33.99026274, 35.64255982, 33.99025051, 35.64255445, 33.99024273, 35.64255177, 33.99023606, 35.64254775, 33.99022827, 35.64254104, 33.99022383, 35.64253702, 33.99022160, 35.64253568, 33.99020603, 35.64253031, 33.99020159, 35.64252361, 33.99019603, 35.64252227, 33.99018935, 35.64251958, 33.99018046, 35.64251690, 33.99017156, 35.64251556, 33.99016044, 35.64250885, 33.99015377, 35.64250617, 33.99014710, 35.64250215, 33.99014265, 35.64249947, 33.99013598, 35.64249678, 33.99013042, 35.64249410, 33.99012375, 35.64249142, 33.99011485, 35.64248337, 33.99010929, 35.64248203, 33.99");
            WriteLiteral(@"010262, 35.64247667, 33.99009484, 35.64247264, 33.99008817, 35.64247130, 33.99008483, 35.64246862
        , 33.99011374, 35.64248337, 33.99010262, 35.64248069, 33.99009039, 35.64247533, 33.99008594, 35.64247264, 33.99007705, 35.64246728, 33.99006815, 35.64246057, 33.99005370, 35.64245387, 33.99004925, 35.64245253, 33.99004146, 35.64244851, 33.99003146, 35.64244046, 33.99002034, 35.64243509, 33.99001033, 35.64242839, 33.99000811, 35.64242839, 33.99000477, 35.64242302, 33.98998142, 35.64240559, 33.98997475, 35.64240425, 33.98996474, 35.64239888, 33.98995807, 35.64239486, 33.98995473, 35.64238950, 33.98993916, 35.64238279, 33.98992693, 35.64237609];
    var inc = 0;
    var platform = new H.service.Platform({
        app_id: 'devportal-demo-20180625',
        app_code: '9v2BkviRwi9Ot26kp2IysQ',
        useHTTPS: true
    });
    var pixelRatio = window.devicePixelRatio || 1;
    var defaultLayers = platform.createDefaultLayers({
        tileSize: pixelRatio === 1 ? 256 : 512,
        ppi: pixelRatio =");
            WriteLiteral(@"== 1 ? undefined : 320
    });

    //Step 2: initialize a map
    var map = new H.Map(document.getElementById('map'),
        defaultLayers.normal.map, {
            center: { lat: 33.977 , lng: 35.6200633 },
            zoom: 22,
            pixelRatio: pixelRatio
        });

    const mapEvents = new H.mapevents.MapEvents(map);
    const behavior = new H.mapevents.Behavior(mapEvents);

    const icon = new H.map.Icon('/images/");
            EndContext();
            BeginContext(8068, 12, false);
#line 159 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                    Write(vehicle.Icon);

#line default
#line hidden
            EndContext();
            BeginContext(8080, 72, true);
            WriteLiteral("\', { size: { w: 100, h: 100 } });\r\n    marker = new H.map.Marker({ lat: ");
            EndContext();
            BeginContext(8153, 16, false);
#line 160 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                Write(vehicle.Latitude);

#line default
#line hidden
            EndContext();
            BeginContext(8169, 6, true);
            WriteLiteral(", lng:");
            EndContext();
            BeginContext(8176, 18, false);
#line 160 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                       Write(vehicle.Longtitude);

#line default
#line hidden
            EndContext();
            BeginContext(8194, 2711, true);
            WriteLiteral(@"}, { icon: icon });   
    map.addObject(marker);


    function setUpClickListener(map) {
  map.addEventListener('tap', function (evt) {
    var coord = map.screenToGeo(evt.currentPointer.viewportX,
        evt.currentPointer.viewportY);
      route.push(coord.lat.toFixed(8));
      route.push(coord.lng.toFixed(8));
   //  alert(coord.lat.toFixed(8)) ;
      //alert(coord.lng.toFixed(8));
  });
    }

    function showSum() {
        document.getElementById(""sum"").innerHTML = route.join();
    }


    setUpClickListener(map);

    function ChangeVehicle() {
        clearTimeout(myVar);
         document.getElementById(""status"").innerHTML = "" "";
         document.getElementById(""driver"").innerHTML = "" "";
         document.getElementById(""fuel"").innerHTML ="" "";
         document.getElementById(""odo"").innerHTML = "" "";
          document.getElementById(""load"").innerHTML = "" "";
        vehicle = $(""#selectedVehicle"").val();
        myVar = setInterval(infoTimer, rate);
    }
    fu");
            WriteLiteral(@"nction ChangeRate(ele) {
        rate = ele.value*100;
        if (rate < 100)
            rate = 100;
        clearTimeout(myVar);
         var d = new Date();
         document.getElementById(""time"").innerHTML = d.toLocaleTimeString();
        myVar = setInterval(infoTimer, rate);
    }
    function infoTimer() {
    var d = new Date();
    document.getElementById(""time"").innerHTML = d.toLocaleTimeString();
     
        $.ajax({
            type: ""GET"",
            url: '/Map/GetVehicleInfo',
            data: { ""id"": vehicle },
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            beforeSend: function () {
               // alert(""before""); // Show loader icon
            },
            success: function (response) {
                //alert(""Hello"");
                var status = response.status;
                if (status == ""Active"")
                    document.getElementById(""status"").innerHTML = ""<h5 class='stat-yellow'>Active</");
            WriteLiteral(@"h5>"";
                    if (status == ""Inactive"")
                    document.getElementById(""status"").innerHTML = ""<h5 class='stat-red'>Inactive</h5>"";
                    if (status == ""On The Road"")
                    document.getElementById(""status"").innerHTML = ""<h5 class='stat-blue'>On The Road</h5>"";
                document.getElementById(""driver"").innerHTML = response.driver;
                document.getElementById(""fuel"").innerHTML = response.fuelLevel + "" Litres"";
                document.getElementById(""odo"").innerHTML = response.odometer + "" Km"";
                document.getElementById(""load"").innerHTML = response.currentLoad + "" ");
            EndContext();
            BeginContext(10906, 21, false);
#line 226 "C:\Users\hp\Desktop\Semester6Projects\Fleet2\FleetManagementWebApplication\FleetManagementWebApplication\Views\Map\TrackVehicle.cshtml"
                                                                                Write(ViewData["OrderType"]);

#line default
#line hidden
            EndContext();
            BeginContext(10927, 855, true);
            WriteLiteral(@""";
               
                marker.setPosition({ lat: route2[inc], lng: route2[inc + 1] });
                map.setCenter({ lat: route2[inc], lng: route2[inc + 1] });
                 inc += 2;
                if (inc > route2.length - 1)
                    inc = 0;
               
                //marker.setPosition({ lat: response.latitude, lng: response.longtitude+0.00003});  
                //map.setCenter({ lat: response.latitude, lng: response.longtitude });
            
            },
            complete: function () {
               // alert(""Done"");
            },
            failure: function (jqXHR, textStatus, errorThrown) {
                alert(""HTTP Status: "" + jqXHR.status + ""; Error Text: "" + jqXHR.responseText); // Display error message
            }
        });

} 


   



</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
